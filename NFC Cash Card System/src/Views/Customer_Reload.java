/*
 * Copyright (c) 2018 Spyder Innovations </Akila Ranasinghe>
 * All rights reserved.
 */
package Views;

import Ctrl.JDBC;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.awt.event.KeyEvent;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import java.util.Date;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 * @author AKILA
 */
public class Customer_Reload extends javax.swing.JDialog {

    /**
     * Creates new form Customer_Reload
     *
     * @param parent
     * @param modal
     * @param payeeID
     * @param balance
     */
    String customerID;
    String avlBalance;

    public Customer_Reload(java.awt.Frame parent, boolean modal, String cusID, String balance) {
        super(parent, modal);
        initComponents();
        customerID = cusID;
        avlBalance = balance;

        txt_currentBalance.setText(String.valueOf(avlBalance));
        txt_accBalance.setText(String.valueOf(avlBalance));
        btn_reload.setEnabled(false);
        btn_reload.setBackground(new Color(240, 240, 240));

    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_background = new javax.swing.JPanel(){
            private Image image;{
                try{
                    ImageIcon ii = new ImageIcon(getClass().getResource("/Images/background.png"));
                    image = ii.getImage();
                }catch(Exception e){
                }
            }
            @Override
            protected void paintComponent(Graphics graphcs){
                super.paintComponent(graphcs);
                graphcs.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        Panel_header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        txt_currentBalance = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_reload = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        txt_ReloadAmount = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txt_accBalance = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        btn_cancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setResizable(false);

        Panel_header.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        jLabel1.setText("Reload");

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Customer");

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));

        javax.swing.GroupLayout Panel_headerLayout = new javax.swing.GroupLayout(Panel_header);
        Panel_header.setLayout(Panel_headerLayout);
        Panel_headerLayout.setHorizontalGroup(
            Panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(Panel_headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 468, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_headerLayout.setVerticalGroup(
            Panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        txt_currentBalance.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        txt_currentBalance.setForeground(new java.awt.Color(0, 102, 102));
        txt_currentBalance.setText("0.00");

        jLabel3.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        jLabel3.setText("Reload Amount");

        btn_reload.setBackground(new java.awt.Color(0, 125, 184));
        btn_reload.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        btn_reload.setForeground(new java.awt.Color(255, 255, 255));
        btn_reload.setText("Reload");
        btn_reload.setContentAreaFilled(false);
        btn_reload.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_reload.setOpaque(true);
        btn_reload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_reloadActionPerformed(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(0, 102, 102));
        jLabel4.setText(":       Rs.");

        jLabel6.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        jLabel6.setText(":       Rs.");

        jLabel7.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 102, 102));
        jLabel7.setText("Current Balance");

        txt_ReloadAmount.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        txt_ReloadAmount.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txt_ReloadAmountFocusLost(evt);
            }
        });
        txt_ReloadAmount.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txt_ReloadAmountKeyPressed(evt);
            }
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txt_ReloadAmountKeyReleased(evt);
            }
            public void keyTyped(java.awt.event.KeyEvent evt) {
                txt_ReloadAmountKeyTyped(evt);
            }
        });

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));

        jLabel8.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(0, 102, 102));
        jLabel8.setText("Account Balance");

        jLabel9.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(0, 102, 102));
        jLabel9.setText(":       Rs.");

        txt_accBalance.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        txt_accBalance.setForeground(new java.awt.Color(0, 102, 102));
        txt_accBalance.setText("0.00");

        jLabel10.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(0, 102, 102));
        jLabel10.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel10.setText("- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -");

        btn_cancel.setBackground(new java.awt.Color(255, 102, 102));
        btn_cancel.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        btn_cancel.setForeground(new java.awt.Color(255, 255, 255));
        btn_cancel.setText("Cancel");
        btn_cancel.setContentAreaFilled(false);
        btn_cancel.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_cancel.setOpaque(true);
        btn_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_cancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_backgroundLayout = new javax.swing.GroupLayout(Panel_background);
        Panel_background.setLayout(Panel_backgroundLayout);
        Panel_backgroundLayout.setHorizontalGroup(
            Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jSeparator2)
            .addGroup(Panel_backgroundLayout.createSequentialGroup()
                .addContainerGap(60, Short.MAX_VALUE)
                .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(Panel_backgroundLayout.createSequentialGroup()
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel9)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txt_accBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE))
                    .addGroup(Panel_backgroundLayout.createSequentialGroup()
                        .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel6)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(txt_currentBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 210, Short.MAX_VALUE)
                            .addComponent(txt_ReloadAmount))))
                .addContainerGap(60, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_backgroundLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, Panel_backgroundLayout.createSequentialGroup()
                        .addComponent(btn_reload)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(btn_cancel)))
                .addContainerGap())
        );

        Panel_backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel3, jLabel7, jLabel8});

        Panel_backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {jLabel4, jLabel6, jLabel9});

        Panel_backgroundLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btn_cancel, btn_reload});

        Panel_backgroundLayout.setVerticalGroup(
            Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_backgroundLayout.createSequentialGroup()
                .addComponent(Panel_header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(43, 43, 43)
                .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7)
                    .addComponent(txt_currentBalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txt_ReloadAmount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(3, 3, 3)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(txt_accBalance))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 68, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btn_reload)
                    .addComponent(btn_cancel))
                .addContainerGap())
        );

        Panel_backgroundLayout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {jLabel3, jLabel4, jLabel6, jLabel7, jLabel8, jLabel9, txt_ReloadAmount, txt_accBalance, txt_currentBalance});

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_reloadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_reloadActionPerformed

        try {
            int i = JOptionPane.showConfirmDialog(rootPane, "Are you sure, you want to reload now ?", "Reload Account Balance", 0);
            if (i == 0) {
                // save Reload Transaction record
                JDBC.putData("INSERT INTO reload VALUES('0' , '" + customerID + "' , '" + txt_ReloadAmount.getText() + "' , '" + Home.adminUserID + "' , '" + new SimpleDateFormat("yyyy-MM-dd").format(new Date()).toString() + "' , '" + new SimpleDateFormat("hh:mm:ss a").format(new Date()).toString() + "'   ) ");
                // Update customer account balance amount
                JDBC.putData(" UPDATE customer SET balance = '" + txt_accBalance.getText() + "' WHERE customer_id = '" + customerID + "' ");

                // pass SMS text to SUB Device 4 send SMS
                ResultSet rsCustDet = JDBC.getData(" SELECT * FROM customer WHERE customer_id = '" + customerID + "'  ");
                if (rsCustDet.next()) {
                    Home.communicator.writeData("SMS_" + rsCustDet.getString("contact_no") + "_Rs." + txt_ReloadAmount.getText());
                }

                JOptionPane.showMessageDialog(rootPane, "Reload Transaction Successful!");
                this.dispose();
            }
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_btn_reloadActionPerformed

    private void txt_ReloadAmountKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ReloadAmountKeyTyped

        char key = evt.getKeyChar();
        if (!Character.isDigit(key)) {
            if (key != '.') {
                evt.consume();
            }
        }
        if (key == KeyEvent.VK_PERIOD) {
            if (txt_ReloadAmount.getText().trim().contains(".")) {
                evt.consume();
            }
        }
        if (txt_ReloadAmount.getText().length() == 15) {
            evt.consume();
        }

    }//GEN-LAST:event_txt_ReloadAmountKeyTyped

    private void txt_ReloadAmountFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txt_ReloadAmountFocusLost

        final DecimalFormat df = new DecimalFormat("#0.00");
        if (txt_ReloadAmount.getText().trim().isEmpty()) {
            txt_ReloadAmount.setText("0");
        }
        if (txt_ReloadAmount.getText().trim().equals(".")) {
            txt_ReloadAmount.setText("0");
        }
        txt_ReloadAmount.setText(df.format(Double.parseDouble(txt_ReloadAmount.getText().trim())));
        calcBalance();

    }//GEN-LAST:event_txt_ReloadAmountFocusLost

    private void txt_ReloadAmountKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ReloadAmountKeyPressed

        if (evt.getKeyCode() == KeyEvent.VK_ENTER) {
            btn_reload.grabFocus();
        }

    }//GEN-LAST:event_txt_ReloadAmountKeyPressed

    private void btn_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_cancelActionPerformed

        this.dispose();
    }//GEN-LAST:event_btn_cancelActionPerformed

    private void txt_ReloadAmountKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txt_ReloadAmountKeyReleased

        calcBalance();

    }//GEN-LAST:event_txt_ReloadAmountKeyReleased

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Customer_Reload.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Customer_Reload.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Customer_Reload.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Customer_Reload.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Customer_Reload dialog = new Customer_Reload(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_background;
    private javax.swing.JPanel Panel_header;
    private javax.swing.JButton btn_cancel;
    private javax.swing.JButton btn_reload;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTextField txt_ReloadAmount;
    private javax.swing.JLabel txt_accBalance;
    private javax.swing.JLabel txt_currentBalance;
    // End of variables declaration//GEN-END:variables

    private void calcBalance() {
        try {
            // check reload amount is empty OR not
            if (txt_ReloadAmount.getText().toString() == null | txt_ReloadAmount.getText().toString().isEmpty()) {
                txt_accBalance.setText(txt_currentBalance.getText());
                btn_reload.setEnabled(false);  // Disable reload
                btn_reload.setBackground(new Color(240, 240, 240));
            } else {
                // revoke unecessary input values
                if (txt_ReloadAmount.getText().toString().trim().equals(".")) {
                    btn_reload.setEnabled(false);  // Disable reload
                    btn_reload.setBackground(new Color(240, 240, 240));
                } else {
                    txt_accBalance.setText(String.valueOf(new DecimalFormat("#0.00").format(Double.valueOf(txt_currentBalance.getText()) + Double.valueOf(txt_ReloadAmount.getText()))));
                    // Check if reload Amount == 0.00
                    if (Double.valueOf(txt_ReloadAmount.getText()) == 0.00) {
                        btn_reload.setEnabled(false);  // Disable reload
                        btn_reload.setBackground(new Color(240, 240, 240));
                    } else {
                        btn_reload.setEnabled(true);  // Enable reload
                        btn_reload.setBackground(new Color(0, 125, 184));
                    }
                }
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

}
