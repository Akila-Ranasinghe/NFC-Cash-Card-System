/*
 * Copyright (c) 2018 Spyder Innovations </Akila Ranasinghe>
 * All rights reserved.
 */
package Views;

import Ctrl.JDBC;
import java.awt.Color;
import java.awt.Graphics;
import java.awt.Image;
import java.sql.ResultSet;
import java.text.DecimalFormat;
import java.util.Vector;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;
import javax.swing.JPasswordField;
import javax.swing.table.DefaultTableModel;

/**
 * @author AKILA
 */
public class Seller_AccountDetails extends javax.swing.JDialog {

    /**
     * Creates new form Seller_AccountDetails
     *
     * @param parent
     * @param modal
     * @param payeeAccID
     */
    String payeeAccountID = "";
    String payeeAccountName = "";
    public static JPasswordField pswField;

    public Seller_AccountDetails(java.awt.Frame parent, boolean modal, String payeeAccID, String payeeAccNm) {
        super(parent, modal);
        initComponents();
        payeeAccountID = payeeAccID;
        payeeAccountName = payeeAccNm;
        loadTransRecords();
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of this method is always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Panel_background = new javax.swing.JPanel(){
            private Image image;{
                try{
                    ImageIcon ii = new ImageIcon(getClass().getResource("/Images/background.png"));
                    image = ii.getImage();
                }catch(Exception e){
                }
            }
            @Override
            protected void paintComponent(Graphics graphcs){
                super.paintComponent(graphcs);
                graphcs.drawImage(image,0,0,getWidth(),getHeight(),this);
            }
        };
        Panel_header = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        Panel_content = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jScrollPane2 = new javax.swing.JScrollPane();
        Table_credit = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        Table_withdraw = new javax.swing.JTable();
        Panel_details = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        lbl_accName = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        lbl_balance = new javax.swing.JLabel();
        btn_withdraw = new javax.swing.JButton();
        jSeparator2 = new javax.swing.JSeparator();
        jLabelRs = new javax.swing.JLabel();
        btn_changePsw = new javax.swing.JButton();
        btn_refresh = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setIconImage(null);

        Panel_header.setOpaque(false);

        jLabel1.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        jLabel1.setText("Account Details");

        jLabel5.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(0, 102, 102));
        jLabel5.setText("Seller");

        jSeparator1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));

        javax.swing.GroupLayout Panel_headerLayout = new javax.swing.GroupLayout(Panel_header);
        Panel_header.setLayout(Panel_headerLayout);
        Panel_headerLayout.setHorizontalGroup(
            Panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator1)
            .addGroup(Panel_headerLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_headerLayout.setVerticalGroup(
            Panel_headerLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_headerLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel5)
                .addGap(0, 0, 0)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0))
        );

        Panel_content.setOpaque(false);

        jLabel2.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        jLabel2.setText("Transactions History");

        jTabbedPane1.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N

        Table_credit.setAutoCreateRowSorter(true);
        Table_credit.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        Table_credit.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Account No.", "Amount (Rs.)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane2.setViewportView(Table_credit);

        jTabbedPane1.addTab("  Credit  ", jScrollPane2);

        Table_withdraw.setAutoCreateRowSorter(true);
        Table_withdraw.setFont(new java.awt.Font("Open Sans", 0, 12)); // NOI18N
        Table_withdraw.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Time", "Authority", "Amount (Rs.)"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(Table_withdraw);

        jTabbedPane1.addTab("Withdraw", jScrollPane1);

        Panel_details.setBackground(new java.awt.Color(255, 255, 255));
        Panel_details.setOpaque(false);

        jLabel3.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jLabel3.setText("Account Name");

        lbl_accName.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbl_accName.setForeground(new java.awt.Color(0, 102, 102));
        lbl_accName.setText("name here");

        jLabel6.setFont(new java.awt.Font("Open Sans", 0, 13)); // NOI18N
        jLabel6.setText("Balance");

        lbl_balance.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        lbl_balance.setForeground(new java.awt.Color(0, 102, 102));
        lbl_balance.setText("0.00");

        btn_withdraw.setBackground(new java.awt.Color(255, 153, 51));
        btn_withdraw.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        btn_withdraw.setForeground(new java.awt.Color(255, 255, 255));
        btn_withdraw.setText("Withdraw Money");
        btn_withdraw.setContentAreaFilled(false);
        btn_withdraw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_withdraw.setFocusPainted(false);
        btn_withdraw.setFocusable(false);
        btn_withdraw.setOpaque(true);
        btn_withdraw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_withdrawActionPerformed(evt);
            }
        });

        jSeparator2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(160, 160, 160)));

        jLabelRs.setFont(new java.awt.Font("Open Sans", 0, 16)); // NOI18N
        jLabelRs.setForeground(new java.awt.Color(0, 102, 102));
        jLabelRs.setText("Rs.");

        btn_changePsw.setBackground(new java.awt.Color(0, 125, 184));
        btn_changePsw.setFont(new java.awt.Font("Open Sans", 1, 13)); // NOI18N
        btn_changePsw.setForeground(new java.awt.Color(255, 255, 255));
        btn_changePsw.setText("Change Password");
        btn_changePsw.setContentAreaFilled(false);
        btn_changePsw.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_changePsw.setFocusPainted(false);
        btn_changePsw.setFocusable(false);
        btn_changePsw.setOpaque(true);
        btn_changePsw.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_changePswActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_detailsLayout = new javax.swing.GroupLayout(Panel_details);
        Panel_details.setLayout(Panel_detailsLayout);
        Panel_detailsLayout.setHorizontalGroup(
            Panel_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addGroup(Panel_detailsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(Panel_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_withdraw, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(Panel_detailsLayout.createSequentialGroup()
                        .addGap(10, 10, 10)
                        .addGroup(Panel_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lbl_accName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(Panel_detailsLayout.createSequentialGroup()
                                .addComponent(jLabelRs)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(lbl_balance, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                    .addComponent(btn_changePsw, javax.swing.GroupLayout.DEFAULT_SIZE, 238, Short.MAX_VALUE))
                .addContainerGap())
        );
        Panel_detailsLayout.setVerticalGroup(
            Panel_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_detailsLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbl_accName)
                .addGap(28, 28, 28)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_detailsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbl_balance)
                    .addComponent(jLabelRs))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 138, Short.MAX_VALUE)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 1, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btn_changePsw, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btn_withdraw, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        btn_refresh.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/Ref2.png"))); // NOI18N
        btn_refresh.setContentAreaFilled(false);
        btn_refresh.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btn_refresh.setFocusable(false);
        btn_refresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_refreshActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Panel_contentLayout = new javax.swing.GroupLayout(Panel_content);
        Panel_content.setLayout(Panel_contentLayout);
        Panel_contentLayout.setHorizontalGroup(
            Panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(Panel_contentLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Panel_details, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
                    .addGroup(Panel_contentLayout.createSequentialGroup()
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 356, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_refresh, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        Panel_contentLayout.setVerticalGroup(
            Panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_contentLayout.createSequentialGroup()
                .addGroup(Panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(Panel_contentLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(Panel_details, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(Panel_contentLayout.createSequentialGroup()
                        .addGroup(Panel_contentLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(btn_refresh, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(0, 0, 0)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout Panel_backgroundLayout = new javax.swing.GroupLayout(Panel_background);
        Panel_background.setLayout(Panel_backgroundLayout);
        Panel_backgroundLayout.setHorizontalGroup(
            Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_header, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Panel_content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        Panel_backgroundLayout.setVerticalGroup(
            Panel_backgroundLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Panel_backgroundLayout.createSequentialGroup()
                .addComponent(Panel_header, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(Panel_content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(Panel_background, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btn_refreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_refreshActionPerformed

        loadTransRecords();
    }//GEN-LAST:event_btn_refreshActionPerformed

    private void btn_withdrawActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_withdrawActionPerformed

        try {
            Home.subWindowName = "SellerAccountDetails";
            pswField = new JPasswordField();
            int confirmPSW = JOptionPane.showConfirmDialog(rootPane, pswField, "Please Insert Current Password", JOptionPane.OK_CANCEL_OPTION);
            if (confirmPSW == 0) { // if yes
                if (!pswField.getText().toString().trim().isEmpty()) {
                    ResultSet rs = JDBC.getData("SELECT payee_account_id, password FROM payee_account WHERE payee_account_id='" + payeeAccountID + "' AND password = '" + pswField.getText().toString().trim() + "' ");
                    if (rs.next()) {
                        new Seller_Withdraw(null, true, payeeAccountID, lbl_balance.getText()).setVisible(true);
                        btn_refresh.doClick();
                        Home.subWindowName = "";
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Invalid Password.", "Access Denied", 2);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Please Insert Valid Password.", "Access Denied", 2);
                }
            }
            Home.subWindowName = "";

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_withdrawActionPerformed

    private void btn_changePswActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_changePswActionPerformed

        try {
            Home.subWindowName = "SellerAccountDetails";
            pswField = new JPasswordField();
            int confirmPSW = JOptionPane.showConfirmDialog(rootPane, pswField, "Please Insert Current Password", JOptionPane.OK_CANCEL_OPTION);
            if (confirmPSW == 0) { // if yes
                if (!pswField.getText().toString().trim().isEmpty()) {
                    ResultSet rs = JDBC.getData("SELECT payee_account_id, password FROM payee_account WHERE payee_account_id='" + payeeAccountID + "' AND password = '" + pswField.getText().toString().trim() + "' ");
                    if (rs.next()) {
                        new Seller_ChangePassword(null, true, payeeAccountID).setVisible(true);
                        Home.subWindowName = "";
                    } else {
                        JOptionPane.showMessageDialog(rootPane, "Invalid Password.", "Access Denied", 2);
                    }
                } else {
                    JOptionPane.showMessageDialog(rootPane, "Please Insert Valid Password.", "Access Denied", 2);
                }
            }
            Home.subWindowName = "";

        } catch (Exception e) {
            e.printStackTrace();
        }

    }//GEN-LAST:event_btn_changePswActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Seller_AccountDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Seller_AccountDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Seller_AccountDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Seller_AccountDetails.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                Seller_AccountDetails dialog = new Seller_AccountDetails(new javax.swing.JFrame(), true, null, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Panel_background;
    private javax.swing.JPanel Panel_content;
    private javax.swing.JPanel Panel_details;
    private javax.swing.JPanel Panel_header;
    private javax.swing.JTable Table_credit;
    private javax.swing.JTable Table_withdraw;
    private javax.swing.JButton btn_changePsw;
    private javax.swing.JButton btn_refresh;
    private javax.swing.JButton btn_withdraw;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabelRs;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel lbl_accName;
    private javax.swing.JLabel lbl_balance;
    // End of variables declaration//GEN-END:variables

    private void loadTransRecords() {
        try {
            // load CREDIT transactions
            DefaultTableModel dtmCredit = (DefaultTableModel) Table_credit.getModel();
            ResultSet rsCredit = JDBC.getData("SELECT * FROM payment WHERE payee_account_id = '" + payeeAccountID + "'  ");
            dtmCredit.setRowCount(0);
            while (rsCredit.next()) {
                Vector v = new Vector();
                v.add(rsCredit.getString("date"));
                v.add(rsCredit.getString("time"));
                v.add(rsCredit.getString("customer_id"));
                v.add(new DecimalFormat("#0.00").format(rsCredit.getDouble("amount")));
                dtmCredit.addRow(v);
            }

            // load WITHDRAW transactions
            DefaultTableModel dtmWdr = (DefaultTableModel) Table_withdraw.getModel();
            ResultSet rsAdmin;
            ResultSet rsWdr = JDBC.getData("SELECT * FROM withdraw WHERE payee_account_id = '" + payeeAccountID + "'  ");
            dtmWdr.setRowCount(0);
            while (rsWdr.next()) {
                Vector v = new Vector();
                v.add(rsWdr.getString("date"));
                v.add(rsWdr.getString("time"));
                rsAdmin = JDBC.getData("SELECT id,user_name FROM admin WHERE id = '" + rsWdr.getString("admin_id") + "'  ");
                if (rsAdmin.next()) {
                    v.add(rsAdmin.getString("user_name"));
                }
                v.add(new DecimalFormat("#0.00").format(rsWdr.getDouble("amount")));
                dtmWdr.addRow(v);
            }

            // load Account Details
            ResultSet rPayee = JDBC.getData("SELECT * FROM payee_account WHERE payee_account_id = '" + payeeAccountID + "'  ");
            if (rPayee.next()) {
                lbl_accName.setText(rPayee.getString("account_name"));
                lbl_balance.setText(String.valueOf(new DecimalFormat("#0.00").format(rPayee.getDouble("balance"))));
            } else {
                lbl_balance.setText("0.00");
            }

            // set Action buttons
            if (lbl_balance.getText().equals("0.00")) {
                btn_withdraw.setEnabled(false);
                btn_withdraw.setBackground(new Color(240, 240, 240));
            } else {
                btn_withdraw.setEnabled(true);
                btn_withdraw.setBackground(new Color(255, 153, 51));
            }

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
}
